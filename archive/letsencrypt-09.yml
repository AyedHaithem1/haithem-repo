---
- name: Generate Let's Encrypt SSL Certificates and Configure Nginx for SSL
  hosts: localhost
  remote_user: master01  
  become: yes
  vars:
    domain: ayedhaithem.com
    ansible_python_interpreter: /usr/bin/python3    
    email: haithem.aayed@gmail.com
    certbot_container_name: certbot
    nginx_container_name: nginx_container
    docker_network_name: letsencrypt_network
    common_volumes:
      - "/etc/letsencrypt:/etc/letsencrypt"
      - "/var/lib/letsencrypt:/var/lib/letsencrypt"
    nginx_config_template: "/home/master01/ansible/nginx-ssl-config.j2"  # Updated template name
    nginx_config_dest: "/etc/nginx/conf.d/"  # Destination path within Nginx container
 
    cloudflare_email: haithem.aayed@gmail.com
    cloudflare_api_key: cloud-flare-api
    certbot_config_dir: /etc/letsencrypt
    certbot_config_file: cloudflare.ini


  tasks:
    - name: Stop and remove Nginx container
      docker_container:
        name: "{{ nginx_container_name }}"
        state: absent

    - name: Stop and remove Certbot container
      docker_container:
        name: "{{ certbot_container_name }}"
        state: absent

    - name: Remove Docker network
      docker_network:
        name: "{{ docker_network_name }}"
        state: absent




    - name: Create a Docker network
      docker_network:
        name: "{{ docker_network_name }}"








    - name: Start Certbot container with DNS-01 challenge
      docker_container:
        name: "{{ certbot_container_name }}"
        image: certbot/certbot
        volumes:
          - "{{ common_volumes }}:{{ common_volumes }}"
        networks:
          - name: "{{ docker_network_name }}"
    - name: Wait for Certbot container to be up
      wait_for:
        host: "{{ certbot_container_name }}"
        delay: 10
        timeout: 300
      retries: 30
      delegate_to: localhost
      become: no
      ignore_errors: yes
      register: certbot_container_ready





    - name: Create the cloudflare.ini file
      copy:
        content: |
          # Cloudflare API credentials
          dns_cloudflare_email = {{ cloudflare_email }}
          dns_cloudflare_api_key = {{ cloudflare_api_key }}
        dest: "{{ certbot_config_dir }}/{{ certbot_config_file }}"
        mode: '0600'
      when: certbot_container_ready.elapsed > 0  # Only create the file if the container is up        

    - name: Secure the permissions of cloudflare.ini
      file:
        path: "{{ certbot_config_dir }}/{{ certbot_config_file }}"
        owner: root
        group: root
        mode: '0600'



    - name: Add DNS-01 challenge DNS TXT records via Cloudflare API
      shell: |
        certbot certonly --dns-cloudflare --dns-cloudflare-credentials /etc/letsencrypt/cloudflare.ini --email "{{ email }}" --agree-tos -d "{{ domain }}"
        docker exec -i {{ certbot_container_name }} cat /etc/letsencrypt/cloudflare.ini
      changed_when: false
      register: certbot_output







    - name: Start Nginx container for the HTTP challenge
      docker_container:
        name: "{{ nginx_container_name }}"
        image: nginx:alpine
        ports:
          - "80:80"
          - "443:443"  # Expose port 443 for HTTPS
        volumes: "{{ common_volumes }}"
        networks:
          - name: "{{ docker_network_name }}"
        restart_policy: always

    # Add tasks here to wait for the certificate issuance to complete, e.g., using a notify or custom logic.

    - name: Generate Nginx SSL configuration file
      command: "sudo docker cp /home/master01/ansible/nginx-ssl-config.j2 nginx_container:/etc/nginx/conf.d/"      

    - name: Get public IP of Nginx container
      docker_container_info:
        name: "{{ nginx_container_name }}"
      register: nginx_container_info

    - debug:
        var: nginx_container_info.ansible_facts.docker_container_info.NetworkSettings.Networks.bridge.IPAddress
    - name: Debug Nginx container info
      debug:
        var: nginx_container_info        
